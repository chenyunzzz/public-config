version: '3.8'

services:
  # MySQL 服务配置
  mysql:
    image: mysql:8.0.28
    container_name: app-mysql
    restart: always
    environment:
      # 数据库根密码
      MYSQL_ROOT_PASSWORD: 123456
      # 初始数据库名称
      MYSQL_DATABASE: py_auto
      # 应用程序使用的数据库用户
      MYSQL_USER: admin
      # 应用程序用户的密码
      MYSQL_PASSWORD: 123456
      # 设置字符集
      MYSQL_INITDB_ARGS: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      # 持久化存储 MySQL 数据
      - C:\\Users\\cheny\\Documents\\workspace\\env\\opt\\mysql\\data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 10s
      timeout: 5s
      retries: 5
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Redis 服务配置
  redis:
    image: redis:latest
    container_name: app-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      # 持久化存储 Redis 数据
      - C:\\Users\\cheny\\Documents\\workspace\\env\\opt\\redis\\data:/data
      # Redis 配置文件
      - C:\\Users\\cheny\\Documents\\workspace\\env\\opt\\redis\\conf\\redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

# 网络配置
networks:
  app-network:
    driver: bridge